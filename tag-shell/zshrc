# zsh init file
# ~/.zshrc
# Author : Kuzma Ludovic (inspired by Jonathan Buschmann)

# Useful functions

# Note : some terminal emulator export TERM to xterm but they support 256 colors
_terminal_256color() {
	[ "$TERM" = "screen-256color" ] || [ "${TERM[1,5]}" = "xterm" ]
}

_terminal_tmux() {
	[ -n "$TMUX" ]
}

get_os_lower() {
	echo "${$(uname):l}"
}

emacs_installed() {
	[ $(command -v "emacs") ]
}

mg_installed() {
	[ $(command -v "mg") ]
}

tmux_installed() {
	[ $(command -v "tmux") ]
}

#
# Bind keys
#

# Emacs style key bindings
bindkey -e

# Xterm and Tmux
bindkey ';5A' up-line # C-<up>
bindkey ';5B' down-line # C-<down>
bindkey ';5C' emacs-forward-word # C-<right>
bindkey ';5D' emacs-backward-word # C-<left>
# Putty
bindkey '^[OA' up-line # C-<up>
bindkey '^[OB' down-line # C-<down>
bindkey '^[OC' emacs-forward-word # C-<right>
bindkey '^[OD' emacs-backward-word # C-<left>
# Urxvt
bindkey '^[Oa' up-line # C-<up>
bindkey '^[Ob' down-line # C-<down>
bindkey '^[Oc' emacs-forward-word # C-<right>
bindkey '^[Od' emacs-backward-word # C-<left>

#
# Zsh init
#

# Set the best editor ever

if [ emacs_installed ]; then
	EDITOR=emacs
elif [ mg_installed ]; then
	EDITOR=mg
fi

# Zsh history
HISTFILE=${HOME}/.zsh_history
HISTSIZE=4000
SAVEHIST=${HISTSIZE}

# Load prompt
autoload -Uz promptinit && promptinit
setopt promptsubst
setopt transientrprompt

# Load prompt colors
autoload -U colors && colors

# Load compinit
autoload -Uz compinit && compinit

# Load zmv
autoload -Uz zmv

#
# Options
#

setopt APPEND_HISTORY # Append shell history

setopt HIST_EXPIRE_DUPS_FIRST # Duplication expire first
setopt HIST_IGNORE_DUPS # Do not record duplicated event
setopt HIST_IGNORE_ALL_DUPS # Delete old duplicated event if a new is recorded
setopt HIST_FIND_NO_DUPS # Do not diplay previously found event
setopt HIST_IGNORE_SPACE # Do not record event with start with space
setopt HIST_SAVE_NO_DUPS # Do not write duplicated event to history
setopt HIST_VERIFY

unsetopt BEEP # Don't use Beeps
unsetopt AUTO_CD
setopt HASH_LIST_ALL # Hash $PATH before completion
setopt INTERACTIVECOMMENTS # Always allow comments
setopt UNSET

#
# Shell colors
#

# Change prompt color

#
# Documentation of the \e escape :
# \e[ is the SGR (Select Graphic Rendition) parameter
# 38 is the extended set forground color escape extension
# 5;<n> is an argument that allow you to choose from the range 0..255 for <n>
# See : https://en.wikipedia.org/wiki/ANSI_escape_code
#

# Set foreground custom colors
if _terminal_256color; then
	fg[medium_magenta]=$'\e[38;5;129m'
	fg[medium_blue]=$'\e[38;5;27m'
	fg[medium_red]=$'\e[38;5;124m'
	fg[medium_green]=$'\e[38;5;64m'
else
	fg[medium_magenta]=$fg[magenta]
	fg[medium_blue]=$fg[blue]
	fg[medium_red]=$fg[red]
	fg[medium_green]=$fg[green]
fi

get_custom_prompt() {
	local prompt=""

	# Current User
	prompt+="%{$fg[green]%}%n%{$reset_color%}"
	prompt+="%{$fg[white]%}@%{$reset_color%}"

	# Current host
	prompt+="%{$fg[medium_magenta]%}%m%{$reset_color%}"
	prompt+="%{$fg[white]%}:%{$reset_color%}"

	# Current working directory max depth is 2
	prompt+="%{$fg[medium_blue]%}%2~%{$reset_color%}"

	# Prompt terminator
	prompt+="%(?/%{$fg[white]%}/%{$fg[red]%}) "

	# Super user prompt
	if [ $(id -u) -eq 0 ]; then
		prompt+="#"
	else
		prompt+="$"
	fi

	prompt+=" %{$reset_color%}"

	echo "${prompt}"
}

PROMPT=$(get_custom_prompt)

unfunction get_custom_prompt

# Change cursor color

_set_cursor_color() {
	if [ $# -ne 1 ]; then
		return
	fi

    if _terminal_tmux; then
    	printf '\033Ptmux;\033\033]12;%s\007\033\\' "$1"
    elif _terminal_256color; then
    	printf '\033]12;%s\007' "$1"
    fi
}

zle-keymap-select() {
    _set_cursor_color "lime green"
}

zle-line-init() {
    _set_cursor_color "lime green"
}

zle-line-finish() {
    _set_cursor_color "lime green"
}

zle -N zle-keymap-select
zle -N zle-line-init
zle -N zle-line-finish

# Change command colors

set_freebsd_ls_colors() {
	# The default colors, see man ls
	#export LSCOLORS="exfxcxdxbxegedabagacad"
	export LSCOLORS="gxfxcxbxdxegedabagacad"
}

case $(get_os_lower) in
	freebsd|macos)
		set_freebsd_ls_colors
	;;
	linux)
		# Nothing
	;;
esac

unfunction set_freebsd_ls_colors

#
# Zstyle
#

zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-apth "${HOME}/.zcompcache"

#
# Aliases
#

set_aliases() {
	alias grep="grep --color=auto"
	alias mmv="noglob zmv -W"

	if [ emacs_installed ]; then
		alias mcs="emacs -nw --no-site-file"
		alias qmcs="emacs -nw -Q"
	fi

	if [ tmux_installed ] && [ _terminal_256color ]; then
		alias tmux="tmux -2"
	fi
}

set_freebsd_aliases() {
	alias ls="ls -G"
	alias ll="ls -G -a -l -h"
}

set_linux_aliases() {
	alias ls="ls --color=auto"
	alias ll="ls --color=auto -a -l -h"
}

set_aliases

case $(get_os_lower) in
	freebsd|macos)
		set_freebsd_aliases
	;;
	linux)
		set_linux_aliases
	;;
esac

unfunction set_aliases
unfunction set_freebsd_aliases
unfunction set_linux_aliases

#
# Load custom extension
#

source_directory() {
	if [ $# -ne 1 ]; then
		return
	fi

	local directory="$1"

	if [ -d "${directory}" ]; then
		for files in $(find "${directory}" -maxdepth 1 -print 2>/dev/null | sort -n); do
			if [ -f "${files}" ]; then
				source "${files}"
			fi
		done
	fi
}

source_directory "${HOME}/.zsh_sources"
source_directory "${HOME}/.zsh_sources/$(hostname)"

unfunction source_directory

# Clean
unfunction get_os_lower
unfunction emacs_installed
unfunction mg_installed
unfunction tmux_installed
